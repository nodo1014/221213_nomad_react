{"ast":null,"code":"var _jsxFileName = \"/Users/kang/Desktop/react/nomad_movie/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n//https://api.coinpaprika.com/v1/tickers\n// 1. api 사용시, 처음 한번만 불러와야한다. \n// `useEffect(()=>{fetch()\n// .then()\n// .then((json)=>{}) , [])};`\n// 2. api 데이터 받기.( json 형식, 배열로 )\n//     1. api 데이터 담을 state 를 빈 배열로 생성 : `const [coins, setCoins] = useState([]);`\n//     2. fetch 로 데이터를 받는다→response를 .json() 으로. —> setCoins(json). setPost(json)\n// 3. api 가져오는 동안, loading… 메세지 보이기(끝나면 없앤다.) : `const [loading, setLoading] = useState(true)`\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [coins, setCoins] = useState([]);\n  const [apples, setApples] = useState([]);\n  useEffect(() => {\n    fetch('https://api.coinpaprika.com/v1/tickers').then(response => {\n      console.log(\"response : \", response);\n      //Response {type: 'cors', url: 'https://api.coinpaprika.com/v1/tickers', status: 200,\n      return response.json(); // 객체를 json으로. (return 문 빼먹어서 ㅠㅠ)\n    }).then(json => {\n      console.log(json);\n      setCoins(json);\n      setLoading(false); //로딩이 끝나면, false -> null\\\\ \n      // 리턴문이 없네??\n    });\n  }, []); // []: 아무것도 감시하지 마.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"API loading? : \", coins.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: \"Loading......\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 18\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        axios.get(\"https://codingapple1.github.io/shop/data2.json\").then(response => {\n          console.log(response);\n          return response.json();\n        }).then(json => {\n          set;\n        }).catch(error => {\n          console.log(\"error\");\n        });\n      },\n      children: \"ajax\\uBC84\\uD2BC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), apples, /*#__PURE__*/_jsxDEV(\"ol\", {\n      children: coins.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.symbol, \":\", item.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5JhjHDIw7EZuyKLz8iuS6Dws4NQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","axios","App","loading","setLoading","coins","setCoins","apples","setApples","fetch","then","response","console","log","json","length","get","set","catch","error","map","item","symbol","name"],"sources":["/Users/kang/Desktop/react/nomad_movie/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n//https://api.coinpaprika.com/v1/tickers\n// 1. api 사용시, 처음 한번만 불러와야한다. \n// `useEffect(()=>{fetch()\n// .then()\n// .then((json)=>{}) , [])};`\n// 2. api 데이터 받기.( json 형식, 배열로 )\n//     1. api 데이터 담을 state 를 빈 배열로 생성 : `const [coins, setCoins] = useState([]);`\n//     2. fetch 로 데이터를 받는다→response를 .json() 으로. —> setCoins(json). setPost(json)\n// 3. api 가져오는 동안, loading… 메세지 보이기(끝나면 없앤다.) : `const [loading, setLoading] = useState(true)`\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const [coins, setCoins] = useState([]);\n  const [apples, setApples] = useState([]);\n\n  useEffect(()=>{\n    fetch('https://api.coinpaprika.com/v1/tickers')\n    .then((response)=>{\n      console.log(\"response : \", response);\n      //Response {type: 'cors', url: 'https://api.coinpaprika.com/v1/tickers', status: 200,\n      return response.json(); // 객체를 json으로. (return 문 빼먹어서 ㅠㅠ)\n    })\n    .then((json)=>{\n      console.log(json);\n      setCoins(json);\n      setLoading(false); //로딩이 끝나면, false -> null\\\\ \n      // 리턴문이 없네??\n    });\n  },[]); // []: 아무것도 감시하지 마.\n\n  return (\n    <div>\n      <h1>API loading? : {coins.length}</h1>\n\n      {loading ? <strong>Loading......</strong> : null}\n      <button\n        onClick={() => {\n          axios\n            .get(\"https://codingapple1.github.io/shop/data2.json\")\n            .then((response) => {\n              console.log(response);\n              return response.json();\n            })\n            .then((json)=>{\n              set\n            })\n            .catch((error) => {\n              console.log(\"error\");\n            });\n        }}\n      >\n        ajax버튼\n      </button>\n        {apples}\n      <ol>\n        {coins.map((item) => (\n          <li>\n            {item.symbol}:{item.name}\n          </li>\n        ))}\n      </ol>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAI;IACZU,KAAK,CAAC,wCAAwC,CAAC,CAC9CC,IAAI,CAAEC,QAAQ,IAAG;MAChBC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEF,QAAQ,CAAC;MACpC;MACA,OAAOA,QAAQ,CAACG,IAAI,EAAE,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDJ,IAAI,CAAEI,IAAI,IAAG;MACZF,OAAO,CAACC,GAAG,CAACC,IAAI,CAAC;MACjBR,QAAQ,CAACQ,IAAI,CAAC;MACdV,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACnB;IACF,CAAC,CAAC;EACJ,CAAC,EAAC,EAAE,CAAC,CAAC,CAAC;;EAEP,oBACE;IAAA,wBACE;MAAA,8BAAoBC,KAAK,CAACU,MAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,EAErCZ,OAAO,gBAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA8B,GAAG,IAAI,eAChD;MACE,OAAO,EAAE,MAAM;QACbF,KAAK,CACFe,GAAG,CAAC,gDAAgD,CAAC,CACrDN,IAAI,CAAEC,QAAQ,IAAK;UAClBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;UACrB,OAAOA,QAAQ,CAACG,IAAI,EAAE;QACxB,CAAC,CAAC,CACDJ,IAAI,CAAEI,IAAI,IAAG;UACZG,GAAG;QACL,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;UAChBP,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;QACtB,CAAC,CAAC;MACN,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGK,EACNN,MAAM,eACT;MAAA,UACGF,KAAK,CAACe,GAAG,CAAEC,IAAI,iBACd;QAAA,WACGA,IAAI,CAACC,MAAM,OAAGD,IAAI,CAACE,IAAI;MAAA;QAAA;QAAA;QAAA;MAAA,QAE3B;IAAC;MAAA;MAAA;MAAA;IAAA,QACC;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEV;AAAC,GArDQrB,GAAG;AAAA,KAAHA,GAAG;AAuDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}